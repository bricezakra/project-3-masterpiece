{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { TILE3D_TYPE } from '../constants';\nimport { getMagicString } from './helpers/parse-utils';\nimport { parsePointCloud3DTile, parsePointCloud3DTileSync } from './parse-3d-tile-point-cloud';\nimport { parseBatchedModel3DTile, parseBatchedModel3DTileSync } from './parse-3d-tile-batched-model';\nimport { parseInstancedModel3DTile, parseInstancedModel3DTileSync } from './parse-3d-tile-instanced-model';\nimport { parseComposite3DTile, parseComposite3DTileSync } from './parse-3d-tile-composite';\nexport function parse3DTile(_x) {\n  return _parse3DTile.apply(this, arguments);\n}\n\nfunction _parse3DTile() {\n  _parse3DTile = _asyncToGenerator(_regeneratorRuntime.mark(function _callee(arrayBuffer) {\n    var byteOffset,\n        options,\n        context,\n        tile,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            byteOffset = _args.length > 1 && _args[1] !== undefined ? _args[1] : 0;\n            options = _args.length > 2 ? _args[2] : undefined;\n            context = _args.length > 3 ? _args[3] : undefined;\n            tile = _args.length > 4 && _args[4] !== undefined ? _args[4] : {};\n            tile.byteOffset = byteOffset;\n            tile.type = getMagicString(arrayBuffer, byteOffset);\n            _context.t0 = tile.type;\n            _context.next = _context.t0 === TILE3D_TYPE.COMPOSITE ? 9 : _context.t0 === TILE3D_TYPE.BATCHED_3D_MODEL ? 12 : _context.t0 === TILE3D_TYPE.INSTANCED_3D_MODEL ? 15 : _context.t0 === TILE3D_TYPE.POINT_CLOUD ? 18 : 21;\n            break;\n\n          case 9:\n            _context.next = 11;\n            return parseComposite3DTile(tile, arrayBuffer, byteOffset, options, context, parse3DTile);\n\n          case 11:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 12:\n            _context.next = 14;\n            return parseBatchedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n          case 14:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n            _context.next = 17;\n            return parseInstancedModel3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n          case 17:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 18:\n            _context.next = 20;\n            return parsePointCloud3DTile(tile, arrayBuffer, byteOffset, options, context);\n\n          case 20:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 21:\n            throw new Error(\"3DTileLoader: unknown type \".concat(tile.type));\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parse3DTile.apply(this, arguments);\n}\n\nexport function parse3DTileSync(arrayBuffer) {\n  var byteOffset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 ? arguments[2] : undefined;\n  var context = arguments.length > 3 ? arguments[3] : undefined;\n  var tile = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  tile.byteOffset = byteOffset;\n  tile.type = getMagicString(arrayBuffer, byteOffset);\n\n  switch (tile.type) {\n    case TILE3D_TYPE.COMPOSITE:\n      return parseComposite3DTileSync(tile, arrayBuffer, byteOffset, options, context, parse3DTileSync);\n\n    case TILE3D_TYPE.BATCHED_3D_MODEL:\n      return parseBatchedModel3DTileSync(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.INSTANCED_3D_MODEL:\n      return parseInstancedModel3DTileSync(tile, arrayBuffer, byteOffset, options, context);\n\n    case TILE3D_TYPE.POINT_CLOUD:\n      return parsePointCloud3DTileSync(tile, arrayBuffer, byteOffset, options, context);\n\n    default:\n      throw new Error(\"3DTileLoader: unknown type \".concat(tile.type));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}