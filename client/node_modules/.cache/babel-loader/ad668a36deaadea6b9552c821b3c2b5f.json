{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport DoublyLinkedList from '../utils/doubly-linked-list';\n\nvar defined = function defined(x) {\n  return x !== undefined;\n};\n\nvar Tileset3DCache = function () {\n  function Tileset3DCache() {\n    _classCallCheck(this, Tileset3DCache);\n\n    this._list = new DoublyLinkedList();\n    this._sentinel = this._list.add();\n    this._trimTiles = false;\n  }\n\n  _createClass(Tileset3DCache, [{\n    key: \"reset\",\n    value: function reset() {\n      this._list.splice(this._list.tail, this._sentinel);\n    }\n  }, {\n    key: \"touch\",\n    value: function touch(tile) {\n      var node = tile.cacheNode;\n\n      if (defined(node)) {\n        this._list.splice(this._sentinel, node);\n      }\n    }\n  }, {\n    key: \"add\",\n    value: function add(tileset, tile, addCallback) {\n      if (!defined(tile.cacheNode)) {\n        tile.cacheNode = this._list.add(tile);\n\n        if (addCallback) {\n          addCallback(tileset, tile);\n        }\n      }\n    }\n  }, {\n    key: \"unloadTile\",\n    value: function unloadTile(tileset, tile, unloadCallback) {\n      var node = tile.cacheNode;\n\n      if (!defined(node)) {\n        return;\n      }\n\n      this._list.remove(node);\n\n      tile.cacheNode = undefined;\n\n      if (unloadCallback) {\n        unloadCallback(tileset, tile);\n      }\n    }\n  }, {\n    key: \"unloadTiles\",\n    value: function unloadTiles(tileset, unloadCallback) {\n      var trimTiles = this._trimTiles;\n      this._trimTiles = false;\n      var list = this._list;\n      var maximumMemoryUsageInBytes = tileset.maximumMemoryUsage * 1024 * 1024;\n      var sentinel = this._sentinel;\n      var node = list.head;\n\n      while (node !== sentinel && (tileset.gpuMemoryUsageInBytes > maximumMemoryUsageInBytes || trimTiles)) {\n        var tile = node.item;\n        node = node.next;\n        this.unloadTile(tileset, tile, unloadCallback);\n      }\n    }\n  }, {\n    key: \"trim\",\n    value: function trim() {\n      this._trimTiles = true;\n    }\n  }]);\n\n  return Tileset3DCache;\n}();\n\nexport { Tileset3DCache as default };","map":null,"metadata":{},"sourceType":"module"}