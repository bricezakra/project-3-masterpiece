{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport DoublyLinkedListNode from '../utils/doubly-linked-list-node';\n\nvar defined = function defined(x) {\n  return x !== undefined;\n};\n\nvar DoublyLinkedList = function () {\n  function DoublyLinkedList() {\n    _classCallCheck(this, DoublyLinkedList);\n\n    this.head = undefined;\n    this.tail = undefined;\n    this._length = 0;\n  }\n\n  _createClass(DoublyLinkedList, [{\n    key: \"add\",\n    value: function add(item) {\n      var node = new DoublyLinkedListNode(item, this.tail, undefined);\n\n      if (defined(this.tail)) {\n        this.tail.next = node;\n        this.tail = node;\n      } else {\n        this.head = node;\n        this.tail = node;\n      }\n\n      ++this._length;\n      return node;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(node) {\n      if (!defined(node)) {\n        return;\n      }\n\n      if (defined(node.previous) && defined(node.next)) {\n        node.previous.next = node.next;\n        node.next.previous = node.previous;\n      } else if (defined(node.previous)) {\n        node.previous.next = undefined;\n        this.tail = node.previous;\n      } else if (defined(node.next)) {\n        node.next.previous = undefined;\n        this.head = node.next;\n      } else {\n        this.head = undefined;\n        this.tail = undefined;\n      }\n\n      node.next = undefined;\n      node.previous = undefined;\n      --this._length;\n    }\n  }, {\n    key: \"splice\",\n    value: function splice(node, nextNode) {\n      if (node === nextNode) {\n        return;\n      }\n\n      this.remove(nextNode);\n      var oldNodeNext = node.next;\n      node.next = nextNode;\n\n      if (this.tail === node) {\n        this.tail = nextNode;\n      } else {\n        oldNodeNext.previous = nextNode;\n      }\n\n      nextNode.next = oldNodeNext;\n      nextNode.previous = node;\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return this._length;\n    }\n  }]);\n\n  return DoublyLinkedList;\n}();\n\nexport { DoublyLinkedList as default };","map":null,"metadata":{},"sourceType":"module"}