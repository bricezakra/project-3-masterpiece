{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = _regeneratorRuntime.mark(attributeIterator);\n\nexport default function attributeIterator(_ref) {\n  var values, size, ArrayType, element, i, j;\n  return _regeneratorRuntime.wrap(function attributeIterator$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          values = _ref.values, size = _ref.size;\n          ArrayType = values.constructor;\n          element = new ArrayType(size);\n          i = 0;\n\n        case 4:\n          if (!(i < values.length)) {\n            _context.next = 11;\n            break;\n          }\n\n          for (j = 0; j < size; j++) {\n            element[j] = element[i + j];\n          }\n\n          _context.next = 8;\n          return element;\n\n        case 8:\n          i += size;\n          _context.next = 4;\n          break;\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}","map":null,"metadata":{},"sourceType":"module"}