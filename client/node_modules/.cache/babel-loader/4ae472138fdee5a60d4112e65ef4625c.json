{"ast":null,"code":"import { assert } from '@loaders.gl/loader-utils';\nexport function encode3DTileHeader(tile, dataView, byteOffset) {\n  var HEADER_SIZE = 12;\n\n  if (!dataView) {\n    return byteOffset + HEADER_SIZE;\n  }\n\n  var magic = tile.magic,\n      _tile$version = tile.version,\n      version = _tile$version === void 0 ? 1 : _tile$version,\n      _tile$byteLength = tile.byteLength,\n      byteLength = _tile$byteLength === void 0 ? 12 : _tile$byteLength;\n  assert(Array.isArray(magic) && Number.isFinite(version) && Number.isFinite(byteLength));\n  dataView.setUint8(byteOffset + 0, magic[0]);\n  dataView.setUint8(byteOffset + 1, magic[1]);\n  dataView.setUint8(byteOffset + 2, magic[2]);\n  dataView.setUint8(byteOffset + 3, magic[3]);\n  dataView.setUint32(byteOffset + 4, version, true);\n  dataView.setUint32(byteOffset + 8, byteLength, true);\n  byteOffset += HEADER_SIZE;\n  return byteOffset;\n}\nexport function encode3DTileByteLength(dataView, byteOffsetTileStart, byteLength) {\n  if (!dataView) {\n    return;\n  }\n\n  dataView.setUint32(byteOffsetTileStart + 8, byteLength, true);\n}","map":null,"metadata":{},"sourceType":"module"}