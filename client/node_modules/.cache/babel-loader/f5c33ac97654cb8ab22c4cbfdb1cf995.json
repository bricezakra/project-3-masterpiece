{"ast":null,"code":"import _defineProperty from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport ReactMapGL, { GeolocateControl, NavigationControl, Marker } from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\";\nvar MAPBOX_TOKEN = \"pk.eyJ1IjoiYnJpY2V6YWtyYSIsImEiOiJjazJwbmR3bmcwNjRmM25wZ2VmaTM3MHJ0In0.5F4SAt1Rtc-MXzjv6wxWaQ\";\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      viewport: {\n        width: \"100vw\",\n        height: \"100vh\",\n        latitude: 40.7250863,\n        longitude: -73.9773608,\n        zoom: 11\n      },\n      wifiHotspots: [],\n      userLocation: {}\n    };\n    _this.myMap = React.createRef();\n\n    _this.handleViewportChange = function (viewport) {\n      _this.setState({\n        viewport: _objectSpread({}, _this.state.viewport, {}, viewport)\n      });\n    };\n\n    _this.setUserLocation = function () {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var setUserLocation = {\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        };\n        var newViewport = {\n          height: \"100vh\",\n          width: \"100vw\",\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n          zoom: 10\n        };\n\n        _this.setState({\n          viewport: newViewport,\n          userLocation: setUserLocation\n        });\n      });\n    };\n\n    _this.filterFreeWifi = function (hotspots) {\n      return hotspots.filter(function (spot) {\n        return spot.type === \"Free\";\n      });\n    };\n\n    _this.fetchStationAPI = function () {\n      fetch(\"https://data.cityofnewyork.us/resource/yjub-udmw.json\").then(function (res) {\n        return res.json();\n      }).then(function (hotspots) {\n        var freeWifi = _this.filterFreeWifi(hotspots);\n\n        _this.setState({\n          wifiHotspots: freeWifi\n        });\n      });\n    };\n\n    _this.loadWifiMarkers = function () {\n      return _this.state.wifiHotspots.map(function (spot) {\n        return React.createElement(Marker, {\n          key: spot.objectid,\n          latitude: parseFloat(spot.latitude),\n          longitude: parseFloat(spot.longitude),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"/wifi.png\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchStationAPI();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.viewport);\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.setUserLocation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" My location \"), \" \", React.createElement(\"div\", {\n        className: \"map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ReactMapGL, Object.assign({\n        ref: this.myMap\n      }, this.state.viewport, {\n        width: \"100vw\",\n        height: \"100vh\",\n        onViewportChange: this.handleViewportChange,\n        mapStyle: \"mapbox://styles/bricezakra/ck2psrdx91xod1cq8jz5q18bp\",\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Geocoder, {\n        position: \"top-left\",\n        mapRef: this.myMap,\n        mapboxApiAccessToken: MAPBOX_TOKEN,\n        onViewportChange: this.handleViewportChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \" \", React.createElement(GeolocateControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(NavigationControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), \" \", Object.keys(this.state.userLocation).length !== 0 ? React.createElement(Marker, {\n        latitude: this.state.userLocation.lat,\n        longitude: this.state.userLocation.long,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"location-icon\",\n        src: \"location-icon.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \" Empty \"), \" \", this.loadWifiMarkers(), \" \"), \" \"), \" \");\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/home/coderx/Downloads/GITHUB_REPOSITORIES/University of Texas Austin _ CODING BOOTCAMP _ Homework Repositories/PROJECT03_CAPSTONE_UT/project03/client/src/App.js"],"names":["React","ReactMapGL","GeolocateControl","NavigationControl","Marker","Geocoder","MAPBOX_TOKEN","App","state","viewport","width","height","latitude","longitude","zoom","wifiHotspots","userLocation","myMap","createRef","handleViewportChange","setState","setUserLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","long","newViewport","filterFreeWifi","hotspots","filter","spot","type","fetchStationAPI","fetch","then","res","json","freeWifi","loadWifiMarkers","map","objectid","parseFloat","console","log","Object","keys","length","Component"],"mappings":"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","sourcesContent":["// import \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport \"./App.css\";\nimport React from \"react\";\nimport ReactMapGL, { GeolocateControl, NavigationControl, Marker } from \"react-map-gl\";\nimport Geocoder from \"react-map-gl-geocoder\";\n\nconst MAPBOX_TOKEN = \"pk.eyJ1IjoiYnJpY2V6YWtyYSIsImEiOiJjazJwbmR3bmcwNjRmM25wZ2VmaTM3MHJ0In0.5F4SAt1Rtc-MXzjv6wxWaQ\";\nclass App extends React.Component {\n    state = {\n        viewport: {\n            width: \"100vw\",\n            height: \"100vh\",\n            latitude: 40.7250863,\n            longitude: -73.9773608,\n            zoom: 11\n        },\n        wifiHotspots: [],\n        userLocation: {}\n    };\n    myMap = React.createRef();\n\n    handleViewportChange = viewport => {\n        this.setState({\n            viewport: {...this.state.viewport, ...viewport }\n        });\n    };\n\n    setUserLocation = () => {\n        navigator.geolocation.getCurrentPosition(position => {\n            let setUserLocation = {\n                lat: position.coords.latitude,\n                long: position.coords.longitude\n            };\n            let newViewport = {\n                height: \"100vh\",\n                width: \"100vw\",\n                latitude: position.coords.latitude,\n                longitude: position.coords.longitude,\n                zoom: 10\n            };\n            this.setState({\n                viewport: newViewport,\n                userLocation: setUserLocation\n            });\n        });\n    };\n\n    componentDidMount() {\n        this.fetchStationAPI();\n    }\n\n    filterFreeWifi = hotspots => {\n        return hotspots.filter(spot => {\n            return spot.type === \"Free\";\n        });\n    };\n\n    fetchStationAPI = () => {\n        fetch(\"https://data.cityofnewyork.us/resource/yjub-udmw.json\")\n            .then(res => res.json())\n            .then(hotspots => {\n                let freeWifi = this.filterFreeWifi(hotspots);\n                this.setState({\n                    wifiHotspots: freeWifi\n                });\n            });\n    };\n\n    loadWifiMarkers = () => {\n        return this.state.wifiHotspots.map(spot => {\n            return ( <\n                Marker key = { spot.objectid }\n                latitude = { parseFloat(spot.latitude) }\n                longitude = { parseFloat(spot.longitude) } >\n                <\n                img src = \"/wifi.png\"\n                alt = \"\" / >\n                <\n                /Marker>\n            );\n        });\n    };\n\n    render() {\n        console.log(this.state.viewport);\n        return ( <\n            div className = \"App\" >\n            <\n            button onClick = { this.setUserLocation } > My location < /button> <\n            div className = \"map\" >\n            <\n            ReactMapGL ref = { this.myMap } {...this.state.viewport }\n            width = \"100vw\"\n            height = \"100vh\"\n            onViewportChange = { this.handleViewportChange }\n            mapStyle = \"mapbox://styles/bricezakra/ck2psrdx91xod1cq8jz5q18bp\"\n            mapboxApiAccessToken = { MAPBOX_TOKEN } >\n            <\n            Geocoder position = \"top-left\"\n            mapRef = { this.myMap }\n            mapboxApiAccessToken = { MAPBOX_TOKEN }\n            onViewportChange = { this.handleViewportChange }\n            /> <\n            GeolocateControl / >\n            <\n            NavigationControl / > {\n                Object.keys(this.state.userLocation).length !== 0 ? ( <\n                    Marker latitude = { this.state.userLocation.lat }\n                    longitude = { this.state.userLocation.long } >\n                    <\n                    img className = \"location-icon\"\n                    src = \"location-icon.png\" / >\n                    <\n                    /Marker>\n                ) : ( <\n                    div > Empty < /div>\n                )\n            } { this.loadWifiMarkers() } <\n            /ReactMapGL> < /\n            div > <\n            /div>\n        );\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}