{"ast":null,"code":"import { getStringFromArrayBuffer } from './parse-utils';\nvar SIZEOF_UINT32 = 4;\nexport function parse3DTileTablesHeaderSync(tile, arrayBuffer, byteOffset) {\n  var view = new DataView(arrayBuffer);\n  tile.featureTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.featureTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.batchTableJsonByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  tile.batchTableBinaryByteLength = view.getUint32(byteOffset, true);\n  byteOffset += SIZEOF_UINT32;\n  return byteOffset;\n}\nexport function parse3DTileTablesSync(tile, arrayBuffer, byteOffset, options) {\n  byteOffset = parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options);\n  byteOffset = parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options);\n  return byteOffset;\n}\n\nfunction parse3DTileFeatureTable(tile, arrayBuffer, byteOffset, options) {\n  var featureTableJsonByteLength = tile.featureTableJsonByteLength,\n      featureTableBinaryByteLength = tile.featureTableBinaryByteLength;\n  tile.featureTableJson = {\n    BATCH_LENGTH: 0\n  };\n\n  if (featureTableJsonByteLength > 0) {\n    var featureTableString = getStringFromArrayBuffer(arrayBuffer, byteOffset, featureTableJsonByteLength);\n    tile.featureTableJson = JSON.parse(featureTableString);\n  }\n\n  byteOffset += featureTableJsonByteLength;\n  tile.featureTableBinary = new Uint8Array(arrayBuffer, byteOffset, featureTableBinaryByteLength);\n  byteOffset += featureTableBinaryByteLength;\n  return byteOffset;\n}\n\nfunction parse3DTileBatchTable(tile, arrayBuffer, byteOffset, options) {\n  var batchTableJsonByteLength = tile.batchTableJsonByteLength,\n      batchTableBinaryByteLength = tile.batchTableBinaryByteLength;\n\n  if (batchTableJsonByteLength > 0) {\n    var batchTableString = getStringFromArrayBuffer(arrayBuffer, byteOffset, batchTableJsonByteLength);\n    tile.batchTableJson = JSON.parse(batchTableString);\n    byteOffset += batchTableJsonByteLength;\n\n    if (batchTableBinaryByteLength > 0) {\n      tile.batchTableBinary = new Uint8Array(arrayBuffer, byteOffset, batchTableBinaryByteLength);\n      tile.batchTableBinary = new Uint8Array(tile.batchTableBinary);\n      byteOffset += batchTableBinaryByteLength;\n    }\n  }\n\n  return byteOffset;\n}","map":null,"metadata":{},"sourceType":"module"}